import React from 'react';
import Head from 'next/head';
import axios from 'axios';
import { Grid } from '@mui/material';

import PokemonTile from '../components/PokemonTile';
import DetailPopup from '../components/DetailPopup';
import SearchBar from '../components/SearchBar';
import style from '../styles/Home.module.css';

// mock list of pokemons, might had hit the api limit by mistake
// since getStaticProps might triggered on every page request, especially in
// development server. This would try to make around 50 request/run
import { pokemonList as mockList} from '../mock/pokemonlist';

export async function getStaticProps(context) {
  const reqs = [];
  const nameList = [];

  // queue up requests for pokemon data
  for (let i = 1; i <= 50; i++) {
    reqs.push(axios.get(`https://pokeapi.co/api/v2/pokemon/${i}/`));
  }

  // get the initial data for the pokemons, previously used https://pokeapi.co/api/v2/pokemon/
  // endpoint but it only returns pokemon name and the resource url,
  // need listing on pokemon name, and the types. In this case graphql
  // might be good to use
  const initialData = await Promise.all(reqs)
    .then(res => {
      return res.map((item, i) => {
        const { data } = item;

        nameList.push({
          name: data.name,
          url: `https://pokeapi.co/api/v2/pokemon/${data.id}/`,
        });

        return {
          url: `https://pokeapi.co/api/v2/pokemon/${data.id}/`,
          id: data.id,
          name: data.name,
          types: data.types.map(typeObject => typeObject.type.name),
          image: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${data.id}.png`,
        }
      })
    });

  return {
    props: {
      data: initialData
    }
  }
}

/**
 * Home pagej component
 * @param {*} props
 * @returns
 */
export default function Home(props) {
  const [pokemonList, setPokemonList] = React.useState(props.data);
  // default pokemon list from the initial data, intended to use this as
  // fallback if there's no search term
  const [defaultPokemonList, setDefaultPokemonList] = React.useState(props.data);
  const [isPopupOpen, setPopupOpen] =  React.useState(false);
  const [selectedPokemon, setSelectedPokemon] = React.useState(null);

  return (
    <div className={style['page-home']}>
      <Head>
        <title>Pokemons!</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {/* <SearchBar /> */}
      <main className="content-wrapper">
        <Grid container spacing={1.4}>
          {pokemonList.map((item, index) => {
            return (
              <Grid item xs={12} sm={6} md={4} key={index}>
                <PokemonTile
                  data={item}
                  clickHandler={(e) => {
                    setSelectedPokemon(e.__payload);
                    setPopupOpen(true);
                  }}
                />
              </Grid>
            );
          })}
        </Grid>
      </main>
      <DetailPopup
        isOpen={isPopupOpen}
        closeHandler={(e) => {setPopupOpen(false)}}
        data={selectedPokemon}
      />

    </div>
  )
}

