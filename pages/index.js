import React from 'react';
import Head from 'next/head';
import axios from 'axios';
import { Grid } from '@mui/material';

import PokemonProvider, { DataContext } from '../providers/PokemonProvider';
import PokemonTile from '../components/PokemonTile';
import DetailPopup from '../components/DetailPopup';
import SearchBar from '../components/SearchBar';
import style from '../styles/Home.module.css';

import { pokemonList as mockList} from '../mock/pokemonlist';

export async function getStaticProps(context) {
  const reqs = [];
  const nameList = [];

  for (let i = 1; i <= 50; i++) {
    reqs.push(axios.get(`https://pokeapi.co/api/v2/pokemon/${i}/`));
  }

  const initialData = await Promise.all(reqs)
    .then(res => {
      return res.map((item, i) => {
        const { data } = item;

        nameList.push({
          name: data.name,
          url: `https://pokeapi.co/api/v2/pokemon/${data.id}/`,
        });

        return {
          url: `https://pokeapi.co/api/v2/pokemon/${data.id}/`,
          id: data.id,
          name: data.name,
          types: data.types.map(typeObject => typeObject.type.name),
          image: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${data.id}.png`,
        }
      })
    });

  /*
  const rawData = await axios.get(`https://pokeapi.co/api/v2/pokemon?limit=50`)
    .then((res) => {
      const { results } = res.data;
      const initialData = results.map((item, i) => {
        const regexMatch = item.url.match(/https:\/\/pokeapi.co\/api\/v2\/pokemon\/(\d+)\//);
        let pokemonId = undefined;

        if (regexMatch.length > 1) {
          pokemonId = regexMatch[1];
        }


        return {
          url: item.url,
          id: pokemonId,
          name: item.name,
          // types: pokemonTypes,
          image: `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemonId}.png`,
        }
      });

      return initialData;
  });
  */

  return {
    props: {
      data: initialData
    }
  }
}

export default function Home(props) {
  const [pokemonList, setPokemonList] = React.useState(props.data);
  const [defaultPokemonList, setDefaultPokemonList] = React.useState(props.data);
  const [isPopupOpen, setPopupOpen] =  React.useState(false);
  const [selectedPokemon, setSelectedPokemon] = React.useState(null);

  return (
    <div className={style['page-home']}>
      <Head>
        <title>Pokemons!</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {/* <SearchBar /> */}
      <main className="content-wrapper">
        <Grid container spacing={1.4}>
          {pokemonList.map((item, index) => {
            return (
              <Grid item xs={12} sm={6} md={4} key={index}>
                <PokemonTile
                  data={item}
                  clickHandler={(e) => {
                    setSelectedPokemon(e.__payload);
                    setPopupOpen(true);
                  }}
                />
              </Grid>
            );
          })}
        </Grid>
      </main>
      <DetailPopup
        isOpen={isPopupOpen}
        closeHandler={(e) => {setPopupOpen(false)}}
        data={selectedPokemon}
      />

      <footer>
      </footer>
    </div>
  )
}

